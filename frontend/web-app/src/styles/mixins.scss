// ROIMSG SCSS 믹스인 정의
// 재사용 가능한 스타일 패턴들

// 반응형 믹스인
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (min-width: $breakpoint-xs) { @content; }
  }
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
}

@mixin respond-below($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: #{$breakpoint-sm - 1px}) { @content; }
  }
  @if $breakpoint == md {
    @media (max-width: #{$breakpoint-md - 1px}) { @content; }
  }
  @if $breakpoint == lg {
    @media (max-width: #{$breakpoint-lg - 1px}) { @content; }
  }
  @if $breakpoint == xl {
    @media (max-width: #{$breakpoint-xl - 1px}) { @content; }
  }
}

// Neumorphism 믹스인
@mixin neumorphism($bg-color: $color-surface) {
  background: $bg-color;
  border-radius: $radius-lg;
  box-shadow: $shadow-neumorphism;
  transition: all $transition-normal;
}

@mixin neumorphism-inset($bg-color: $color-surface) {
  background: $bg-color;
  border-radius: $radius-lg;
  box-shadow: $shadow-neumorphism-inset;
  transition: all $transition-normal;
}

@mixin neumorphism-hover {
  &:hover {
    box-shadow: $shadow-neumorphism-inset;
  }
}

@mixin neumorphism-pressed {
  &:active {
    box-shadow: $shadow-neumorphism-inset;
    transform: translateY(1px);
  }
}

// 다크 테마 Neumorphism
@mixin neumorphism-dark($bg-color: $color-gray-800) {
  background: $bg-color;
  border-radius: $radius-lg;
  box-shadow: $shadow-neumorphism-dark;
  transition: all $transition-normal;
}

@mixin neumorphism-dark-inset($bg-color: $color-gray-800) {
  background: $bg-color;
  border-radius: $radius-lg;
  box-shadow: $shadow-neumorphism-dark-inset;
  transition: all $transition-normal;
}

// 버튼 믹스인
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-lg;
  border: none;
  border-radius: $radius-md;
  font-family: $font-family-primary;
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  line-height: $line-height-normal;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-normal;
  user-select: none;
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  background: $color-primary;
  color: white;
  
  &:hover:not(:disabled) {
    background: $color-primary-dark;
    transform: translateY(-1px);
    box-shadow: $shadow-md;
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
    box-shadow: $shadow-sm;
  }
}

@mixin button-secondary {
  @include button-base;
  @include neumorphism;
  color: $color-text-primary;
  
  &:hover:not(:disabled) {
    @include neumorphism-inset;
  }
  
  &:active:not(:disabled) {
    @include neumorphism-pressed;
  }
}

@mixin button-ghost {
  @include button-base;
  background: transparent;
  color: $color-text-secondary;
  border: 1px solid $color-border;
  
  &:hover:not(:disabled) {
    background: $color-surface-variant;
    color: $color-text-primary;
  }
}

// 카드 믹스인
@mixin card-base {
  @include neumorphism;
  padding: $spacing-xl;
  margin-bottom: $spacing-lg;
}

@mixin card-hover {
  &:hover {
    transform: translateY(-2px);
    box-shadow: $shadow-lg;
  }
}

// 입력 필드 믹스인
@mixin input-base {
  @include neumorphism-inset;
  width: 100%;
  padding: $spacing-md;
  border: none;
  outline: none;
  font-family: $font-family-primary;
  font-size: $font-size-base;
  color: $color-text-primary;
  
  &::placeholder {
    color: $color-text-disabled;
  }
  
  &:focus {
    box-shadow: $shadow-neumorphism-inset, 0 0 0 3px rgba($color-primary, 0.1);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// 그리드 믹스인
@mixin grid-auto-fit($min-width: 250px, $gap: $spacing-lg) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
}

@mixin grid-auto-fill($min-width: 250px, $gap: $spacing-lg) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $gap;
}

// 플렉스 믹스인
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  @include flex-column;
  align-items: center;
  justify-content: center;
}

// 텍스트 믹스인
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// 애니메이션 믹스인
@mixin fade-in($duration: $animation-duration-normal) {
  opacity: 0;
  animation: fadeIn $duration ease-in-out forwards;
}

@mixin slide-up($duration: $animation-duration-normal) {
  transform: translateY(20px);
  opacity: 0;
  animation: slideUp $duration ease-in-out forwards;
}

@mixin rotate($duration: 2s) {
  animation: rotate $duration linear infinite;
}

@mixin flip($duration: $animation-duration-slow) {
  animation: flip $duration ease-in-out;
}

// 포지셔닝 믹스인
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-full {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

// 스크롤바 믹스인
@mixin custom-scrollbar($width: 8px, $track-color: $color-surface-variant, $thumb-color: $color-gray-400) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: $radius-sm;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $radius-sm;
    
    &:hover {
      background: darken($thumb-color, 10%);
    }
  }
}

// 접근성 믹스인
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin focus-visible {
  outline: 2px solid $color-primary;
  outline-offset: 2px;
  border-radius: $radius-sm;
}

// 로딩 믹스인
@mixin loading-spinner($size: 40px, $color: $color-primary) {
  width: $size;
  height: $size;
  border: 4px solid $color-surface-variant;
  border-top: 4px solid $color;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

// 빈 상태 믹스인
@mixin empty-state {
  text-align: center;
  padding: $spacing-2xl;
  color: $color-text-secondary;
  
  .empty-icon {
    font-size: 4rem;
    margin-bottom: $spacing-lg;
    opacity: 0.5;
  }
  
  .empty-title {
    font-size: $font-size-xl;
    font-weight: $font-weight-medium;
    margin-bottom: $spacing-sm;
  }
  
  .empty-description {
    font-size: $font-size-base;
    opacity: 0.8;
  }
}

// 컨테이너 믹스인
@mixin container {
  max-width: $container-max-width;
  margin: 0 auto;
  padding: 0 $container-padding-x;
}

// 키프레임 애니메이션
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes flip {
  0% { transform: perspective(400px) rotateY(0); }
  40% { transform: perspective(400px) rotateY(-90deg); }
  60% { transform: perspective(400px) rotateY(-90deg); }
  100% { transform: perspective(400px) rotateY(0); }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    transform: translate3d(0,0,0);
  }
  40%, 43% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -30px, 0);
  }
  70% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -15px, 0);
  }
  90% {
    transform: translate3d(0,-4px,0);
  }
}